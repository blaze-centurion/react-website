{"ast":null,"code":"var _jsxFileName = \"E:\\\\learn_react\\\\first_react\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\n// React Hooks\n// import React, { useState } from \"react\";\n// const App = () => {\n//   const [name, changeName] = useState(\"\");\n//   const [Realname, changeRealName] = useState(\"\");\n//   const getName = (event) => {\n//     changeName(event.target.value);\n//   }\n//   const onSub = (event) => {\n//     changeRealName(name);\n//   }\n//   return (\n//     <>\n//       <h1>Hello World From {Realname}</h1>\n//       <input type=\"text\"\n//             onChange={getName}\n//             value={name}\n//         />\n//       <button onClick={onSub}>Submit Me</button>\n//     </>\n//   );\n// };\n// Simplify way of hooks\n// import React, { useState } from \"react\";\n// const App = () => {\n//   const [fullName, setFullName] = useState({\n//     fname: '',\n//     lname: '',\n//     email: '',\n//     phone: ''\n//   });\n//   const inputEvent = (event) => {\n//     const {value, name} = event.target;\n//     setFullName((preVal) => {\n//       return {\n//         ...preVal,\n//         [name]: value\n//       }\n//     })\n//   }\n//   const onSubmit = (event) => {\n//     event.preventDefault()\n//     alert(\"Form Submit\");\n//   }\n//   return (\n//     <>\n//       <form autoComplete=\"off\" onSubmit={onSubmit}>\n//         <h2>Hello {`${fullName.fname} ${fullName.lname}`}</h2>\n//         <p>{`${fullName.email}  ${fullName.phone}`}</p>\n//         <input\n//             type=\"text\"\n//             placeholder=\"Enter Your Name\"\n//             onChange={inputEvent}\n//             name='fname'\n//             value={fullName.fname}\n//         />\n//         <input\n//             type=\"text\"\n//             placeholder=\"Enter Your Name\"\n//             onChange={inputEvent}\n//             name='lname'\n//             value={fullName.lname}\n//         />\n//         <input\n//             type=\"text\"\n//             placeholder=\"Enter Your Name\"\n//             onChange={inputEvent}\n//             name='email'\n//             value={fullName.email}\n//         />\n//         <input\n//             type=\"text\"\n//             placeholder=\"Enter Your Name\"\n//             onChange={inputEvent}\n//             name='phone'\n//             value={fullName.phone}\n//         />\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </>\n//   )\n// }\n// export default App;\n//////////////// Google Keep Project\n// import React, { useState } from \"react\";\n// import Header from \"./Header\";\n// import Footer from \"./Footer\";\n// import CreateNote from \"./CreateNote\";\n// import Note from \"./Note\";\n// const App = () => {\n//   const [addItem, setAddItem] = useState([]);\n//   const addNote = (note) => {\n//     setAddItem((preVal) => {\n//       return [...preVal, note];\n//     });\n//   };\n//   const onDelete = (id) => {\n// \tsetAddItem((oldData) => {\n// \t\treturn (oldData.filter((currData, indx) => {\n// \t\t\treturn indx!==id;\n// \t\t}) );\n// \t})\n//   };\n//   return (\n//     <>\n//       <Header />\n//       <CreateNote passNote={addNote} />\n//       {addItem.map((val, index) => {\n//         return (\n//           <Note\n//             key={index}\n//             id={index}\n//             title={val.title}\n//             content={val.content}\n//             deleteItem={onDelete}\n//           />\n//         );\n//       })}\n//       <Footer />\n//     </>\n//   );\n// };\n// export default App;\n//////////// Context Api & UseContext\n// import React, { createContext } from 'react';\n// import CompA from './CompA';\n// const FirstName = createContext();\n// const LastName = createContext();\n// const App = () => {\n// \treturn (\n// \t\t<>\n// \t\t\t<FirstName.Provider value={\"Roshan\"}>\n// \t\t\t\t<LastName.Provider value={\"Sharma\"}>\n// \t\t\t\t\t<CompA />\n// \t\t\t\t</LastName.Provider>\n// \t\t\t</FirstName.Provider>\n// \t\t</>\n// \t);\n// }\n// export default App;\n// export {FirstName, LastName};\n//////// UseEffect\n// import React, { useEffect, useState } from 'react'\n// const App = () => {\n// \tconst [num, setNum] = useState(0)\n// \tconst [nums, setNums] = useState(0)\n// \tuseEffect( () => {\n// \t\talert(\"I am clicked\");\n// \t\tconsole.log(\"I am clickcd\");\n// \t}, [num])\n// \treturn (\n// \t\t<>\n// \t\t\t<button onClick={ () => {setNum(num+1)}}>Click Me {num}</button>\n// \t\t\t<br/>\n// \t\t\t<br/>\n// \t\t\t<br/>\n// \t\t\t<button onClick={ () => {setNums(nums+1)}}>Click Mes {nums}</button>\n// \t\t</>\n// \t)\n// }\n// export default App;\n//// UseEffects practice\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [num, setNum] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setNum(num + 1);\n      },\n      children: [\"Click Me \", num, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"5jvem6Tzl4A3nIMosDFhAMXGHnE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/learn_react/first_react/src/App.jsx"],"names":["React","useEffect","useState","App","num","setNum"],"mappingsgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEjB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBH,QAAQ,CAAC,CAAD,CAA9B;AAEA,sBACC;AAAA,2BACC;AAAQ,MAAA,OAAO,EAAE,MAAI;AACpBG,QAAAA,MAAM,CAACD,GAAG,GAAC,CAAL,CAAN;AACA,OAFD;AAAA,8BAEaA,GAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AAOA,CAXD;;GAAMD,G;;KAAAA,G;AAcN,eAAeA,GAAf","sourcesContent":["// React Hooks\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// const App = () => {\r\n//   const [name, changeName] = useState(\"\");\r\n//   const [Realname, changeRealName] = useState(\"\");\r\n\r\n//   const getName = (event) => {\r\n//     changeName(event.target.value);\r\n//   }\r\n\r\n//   const onSub = (event) => {\r\n//     changeRealName(name);\r\n\r\n//   }\r\n\r\n//   return (\r\n//     <>\r\n//       <h1>Hello World From {Realname}</h1>\r\n//       <input type=\"text\"\r\n//             onChange={getName}\r\n//             value={name}\r\n//         />\r\n\r\n//       <button onClick={onSub}>Submit Me</button>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// Simplify way of hooks\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// const App = () => {\r\n\r\n//   const [fullName, setFullName] = useState({\r\n//     fname: '',\r\n//     lname: '',\r\n//     email: '',\r\n//     phone: ''\r\n//   });\r\n\r\n//   const inputEvent = (event) => {\r\n//     const {value, name} = event.target;\r\n\r\n//     setFullName((preVal) => {\r\n//       return {\r\n//         ...preVal,\r\n//         [name]: value\r\n//       }\r\n//     })\r\n\r\n//   }\r\n\r\n//   const onSubmit = (event) => {\r\n//     event.preventDefault()\r\n//     alert(\"Form Submit\");\r\n\r\n//   }\r\n\r\n//   return (\r\n//     <>\r\n//       <form autoComplete=\"off\" onSubmit={onSubmit}>\r\n//         <h2>Hello {`${fullName.fname} ${fullName.lname}`}</h2>\r\n//         <p>{`${fullName.email}  ${fullName.phone}`}</p>\r\n//         <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter Your Name\"\r\n//             onChange={inputEvent}\r\n//             name='fname'\r\n//             value={fullName.fname}\r\n//         />\r\n//         <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter Your Name\"\r\n//             onChange={inputEvent}\r\n//             name='lname'\r\n//             value={fullName.lname}\r\n//         />\r\n//         <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter Your Name\"\r\n//             onChange={inputEvent}\r\n//             name='email'\r\n//             value={fullName.email}\r\n//         />\r\n//         <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter Your Name\"\r\n//             onChange={inputEvent}\r\n//             name='phone'\r\n//             value={fullName.phone}\r\n//         />\r\n//         <button type=\"submit\">Submit</button>\r\n//       </form>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export default App;\r\n\r\n//////////////// Google Keep Project\r\n\r\n// import React, { useState } from \"react\";\r\n// import Header from \"./Header\";\r\n// import Footer from \"./Footer\";\r\n// import CreateNote from \"./CreateNote\";\r\n// import Note from \"./Note\";\r\n\r\n// const App = () => {\r\n\r\n//   const [addItem, setAddItem] = useState([]);\r\n\r\n//   const addNote = (note) => {\r\n//     setAddItem((preVal) => {\r\n//       return [...preVal, note];\r\n//     });\r\n//   };\r\n\r\n//   const onDelete = (id) => {\r\n// \tsetAddItem((oldData) => {\r\n// \t\treturn (oldData.filter((currData, indx) => {\r\n// \t\t\treturn indx!==id;\r\n// \t\t}) );\r\n// \t})\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Header />\r\n//       <CreateNote passNote={addNote} />\r\n\r\n//       {addItem.map((val, index) => {\r\n//         return (\r\n//           <Note\r\n//             key={index}\r\n//             id={index}\r\n//             title={val.title}\r\n//             content={val.content}\r\n//             deleteItem={onDelete}\r\n//           />\r\n//         );\r\n//       })}\r\n\r\n//       <Footer />\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n//////////// Context Api & UseContext\r\n\r\n// import React, { createContext } from 'react';\r\n// import CompA from './CompA';\r\n\r\n\r\n// const FirstName = createContext();\r\n// const LastName = createContext();\r\n\r\n\r\n\r\n// const App = () => {\r\n// \treturn (\r\n// \t\t<>\r\n// \t\t\t<FirstName.Provider value={\"Roshan\"}>\r\n// \t\t\t\t<LastName.Provider value={\"Sharma\"}>\r\n// \t\t\t\t\t<CompA />\r\n// \t\t\t\t</LastName.Provider>\r\n// \t\t\t</FirstName.Provider>\r\n// \t\t</>\r\n// \t);\r\n// }\r\n\r\n// export default App;\r\n// export {FirstName, LastName};\r\n\r\n\r\n\r\n//////// UseEffect\r\n\r\n// import React, { useEffect, useState } from 'react'\r\n\r\n// const App = () => {\r\n\r\n// \tconst [num, setNum] = useState(0)\r\n// \tconst [nums, setNums] = useState(0)\r\n\r\n// \tuseEffect( () => {\r\n// \t\talert(\"I am clicked\");\r\n// \t\tconsole.log(\"I am clickcd\");\r\n// \t}, [num])\r\n\r\n// \treturn (\r\n// \t\t<>\r\n// \t\t\t<button onClick={ () => {setNum(num+1)}}>Click Me {num}</button>\r\n// \t\t\t<br/>\r\n// \t\t\t<br/>\r\n// \t\t\t<br/>\r\n// \t\t\t<button onClick={ () => {setNums(nums+1)}}>Click Mes {nums}</button>\r\n// \t\t</>\r\n// \t)\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n//// UseEffects practice\r\n\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nconst App = () => {\r\n\r\n\tconst [num, setNum] = useState(0);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<button onClick={()=>{\r\n\t\t\t\tsetNum(num+1)\r\n\t\t\t}}>Click Me {num} </button>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}