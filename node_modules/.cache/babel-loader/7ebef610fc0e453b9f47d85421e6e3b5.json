{"ast":null,"code":"var _jsxFileName = \"E:\\\\learn_react\\\\first_react\\\\src\\\\App.jsx\";\n// React Hooks\n// import React, { useState } from \"react\";\n// const App = () => {\n//   const [name, changeName] = useState(\"\");\n//   const [Realname, changeRealName] = useState(\"\");\n//   const getName = (event) => {\n//     changeName(event.target.value);\n//   }\n//   const onSub = (event) => {\n//     changeRealName(name);\n//   }\n//   return (\n//     <>\n//       <h1>Hello World From {Realname}</h1>\n//       <input type=\"text\"\n//             onChange={getName}\n//             value={name}\n//         />\n//       <button onClick={onSub}>Submit Me</button>\n//     </>\n//   );\n// };\n// Simplify way of hooks\n// import React, { useState } from \"react\";\n// const App = () => {\n//   const [fullName, setFullName] = useState({\n//     fname: '',\n//     lname: '',\n//     email: '',\n//     phone: ''\n//   });\n//   const inputEvent = (event) => {\n//     const {value, name} = event.target;\n//     setFullName((preVal) => {\n//       return {\n//         ...preVal,\n//         [name]: value\n//       }\n//     })\n//   }\n//   const onSubmit = (event) => {\n//     event.preventDefault()\n//     alert(\"Form Submit\");\n//   }\n//   return (\n//     <>\n//       <form autoComplete=\"off\" onSubmit={onSubmit}>\n//         <h2>Hello {`${fullName.fname} ${fullName.lname}`}</h2>\n//         <p>{`${fullName.email}  ${fullName.phone}`}</p>\n//         <input\n//             type=\"text\"\n//             placeholder=\"Enter Your Name\"\n//             onChange={inputEvent}\n//             name='fname'\n//             value={fullName.fname}\n//         />\n//         <input\n//             type=\"text\"\n//             placeholder=\"Enter Your Name\"\n//             onChange={inputEvent}\n//             name='lname'\n//             value={fullName.lname}\n//         />\n//         <input\n//             type=\"text\"\n//             placeholder=\"Enter Your Name\"\n//             onChange={inputEvent}\n//             name='email'\n//             value={fullName.email}\n//         />\n//         <input\n//             type=\"text\"\n//             placeholder=\"Enter Your Name\"\n//             onChange={inputEvent}\n//             name='phone'\n//             value={fullName.phone}\n//         />\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </>\n//   )\n// }\n// export default App;\n//////////////// Google Keep Project\n// import React, { useState } from \"react\";\n// import Header from \"./Header\";\n// import Footer from \"./Footer\";\n// import CreateNote from \"./CreateNote\";\n// import Note from \"./Note\";\n// const App = () => {\n//   const [addItem, setAddItem] = useState([]);\n//   const addNote = (note) => {\n//     setAddItem((preVal) => {\n//       return [...preVal, note];\n//     });\n//   };\n//   const onDelete = (id) => {\n// \tsetAddItem((oldData) => {\n// \t\treturn (oldData.filter((currData, indx) => {\n// \t\t\treturn indx!==id;\n// \t\t}) );\n// \t})\n//   };\n//   return (\n//     <>\n//       <Header />\n//       <CreateNote passNote={addNote} />\n//       {addItem.map((val, index) => {\n//         return (\n//           <Note\n//             key={index}\n//             id={index}\n//             title={val.title}\n//             content={val.content}\n//             deleteItem={onDelete}\n//           />\n//         );\n//       })}\n//       <Footer />\n//     </>\n//   );\n// };\n// export default App;\n//////////// Context Api & UseContext\n// import React, { createContext } from 'react';\n// import CompA from './CompA';\n// const FirstName = createContext();\n// const LastName = createContext();\n// const App = () => {\n// \treturn (\n// \t\t<>\n// \t\t\t<FirstName.Provider value={\"Roshan\"}>\n// \t\t\t\t<LastName.Provider value={\"Sharma\"}>\n// \t\t\t\t\t<CompA />\n// \t\t\t\t</LastName.Provider>\n// \t\t\t</FirstName.Provider>\n// \t\t</>\n// \t);\n// }\n// export default App;\n// export {FirstName, LastName};\n//////// UseEffect\n// import React, { useEffect, useState } from 'react'\n// const App = () => {\n// \tconst [num, setNum] = useState(0)\n// \tconst [nums, setNums] = useState(0)\n// \tuseEffect( () => {\n// \t\talert(\"I am clicked\");\n// \t\tconsole.log(\"I am clickcd\");\n// \t}, [num])\n// \treturn (\n// \t\t<>\n// \t\t\t<button onClick={ () => {setNum(num+1)}}>Click Me {num}</button>\n// \t\t\t<br/>\n// \t\t\t<br/>\n// \t\t\t<br/>\n// \t\t\t<button onClick={ () => {setNums(nums+1)}}>Click Mes {nums}</button>\n// \t\t</>\n// \t)\n// }\n// export default App;\n//// UseEffects practice\n// import React, { useEffect, useState } from 'react'\n// const App = () => {\n// \tconst [num, setNum] = useState(0);\n// \tuseEffect(() => {\n// \t\tdocument.title=`You Clicked Me ${num} Times`;\n// \t})\n// \treturn (\n// \t\t<>\n// \t\t\t<button onClick={()=>{\n// \t\t\t\tsetNum(num+1)\n// \t\t\t}}>Click Me {num} </button>\n// \t\t</>\n// \t)\n// }\n// export default App;\n/////// React Router\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport About from \"./About\";\nimport Contact from \"./Contact\";\nimport Error from \"./Error\";\nimport Navbar from \"./Navbar\";\nimport User from './User';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  const Name = () => {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello, I am Name Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: () => {\n          return /*#__PURE__*/_jsxDEV(About, {\n            name: \"About\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 20\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/contact\",\n        render: () => {\n          return /*#__PURE__*/_jsxDEV(Contact, {\n            name: \"Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 20\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/contact/Name\",\n        component: Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/user/:fname\",\n        component: User\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        component: Error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/learn_react/first_react/src/App.jsx"],"names":["React","Route","Switch","About","Contact","Error","Navbar","User","App","Name"],"mappings":";AAAA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;;AAIA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAMC,IAAI,GAAG,MAAM;AACjB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAC,GAFP;AAGE,QAAA,SAAS,EAAE,MAAM;AACf,8BAAO,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;AALH;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,MAAM,EAAE,MAAM;AACZ,8BAAO,QAAC,OAAD;AAAS,YAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;AALH;AAAA;AAAA;AAAA;AAAA,cARF,eAeE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,eAAlB;AAAkC,QAAA,SAAS,EAAEA;AAA7C;AAAA;AAAA;AAAA;AAAA,cAfF,eAgBE,QAAC,KAAD;AAAQ,QAAA,IAAI,EAAC,cAAb;AAA4B,QAAA,SAAS,EAAEF;AAAvC;AAAA;AAAA;AAAA;AAAA,cAhBF,eAiBE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAwBD,CA7BD;;KAAMG,G;AA+BN,eAAeA,GAAf","sourcesContent":["// React Hooks\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// const App = () => {\r\n//   const [name, changeName] = useState(\"\");\r\n//   const [Realname, changeRealName] = useState(\"\");\r\n\r\n//   const getName = (event) => {\r\n//     changeName(event.target.value);\r\n//   }\r\n\r\n//   const onSub = (event) => {\r\n//     changeRealName(name);\r\n\r\n//   }\r\n\r\n//   return (\r\n//     <>\r\n//       <h1>Hello World From {Realname}</h1>\r\n//       <input type=\"text\"\r\n//             onChange={getName}\r\n//             value={name}\r\n//         />\r\n\r\n//       <button onClick={onSub}>Submit Me</button>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// Simplify way of hooks\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// const App = () => {\r\n\r\n//   const [fullName, setFullName] = useState({\r\n//     fname: '',\r\n//     lname: '',\r\n//     email: '',\r\n//     phone: ''\r\n//   });\r\n\r\n//   const inputEvent = (event) => {\r\n//     const {value, name} = event.target;\r\n\r\n//     setFullName((preVal) => {\r\n//       return {\r\n//         ...preVal,\r\n//         [name]: value\r\n//       }\r\n//     })\r\n\r\n//   }\r\n\r\n//   const onSubmit = (event) => {\r\n//     event.preventDefault()\r\n//     alert(\"Form Submit\");\r\n\r\n//   }\r\n\r\n//   return (\r\n//     <>\r\n//       <form autoComplete=\"off\" onSubmit={onSubmit}>\r\n//         <h2>Hello {`${fullName.fname} ${fullName.lname}`}</h2>\r\n//         <p>{`${fullName.email}  ${fullName.phone}`}</p>\r\n//         <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter Your Name\"\r\n//             onChange={inputEvent}\r\n//             name='fname'\r\n//             value={fullName.fname}\r\n//         />\r\n//         <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter Your Name\"\r\n//             onChange={inputEvent}\r\n//             name='lname'\r\n//             value={fullName.lname}\r\n//         />\r\n//         <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter Your Name\"\r\n//             onChange={inputEvent}\r\n//             name='email'\r\n//             value={fullName.email}\r\n//         />\r\n//         <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter Your Name\"\r\n//             onChange={inputEvent}\r\n//             name='phone'\r\n//             value={fullName.phone}\r\n//         />\r\n//         <button type=\"submit\">Submit</button>\r\n//       </form>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export default App;\r\n\r\n//////////////// Google Keep Project\r\n\r\n// import React, { useState } from \"react\";\r\n// import Header from \"./Header\";\r\n// import Footer from \"./Footer\";\r\n// import CreateNote from \"./CreateNote\";\r\n// import Note from \"./Note\";\r\n\r\n// const App = () => {\r\n\r\n//   const [addItem, setAddItem] = useState([]);\r\n\r\n//   const addNote = (note) => {\r\n//     setAddItem((preVal) => {\r\n//       return [...preVal, note];\r\n//     });\r\n//   };\r\n\r\n//   const onDelete = (id) => {\r\n// \tsetAddItem((oldData) => {\r\n// \t\treturn (oldData.filter((currData, indx) => {\r\n// \t\t\treturn indx!==id;\r\n// \t\t}) );\r\n// \t})\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Header />\r\n//       <CreateNote passNote={addNote} />\r\n\r\n//       {addItem.map((val, index) => {\r\n//         return (\r\n//           <Note\r\n//             key={index}\r\n//             id={index}\r\n//             title={val.title}\r\n//             content={val.content}\r\n//             deleteItem={onDelete}\r\n//           />\r\n//         );\r\n//       })}\r\n\r\n//       <Footer />\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n\r\n//////////// Context Api & UseContext\r\n\r\n// import React, { createContext } from 'react';\r\n// import CompA from './CompA';\r\n\r\n// const FirstName = createContext();\r\n// const LastName = createContext();\r\n\r\n// const App = () => {\r\n// \treturn (\r\n// \t\t<>\r\n// \t\t\t<FirstName.Provider value={\"Roshan\"}>\r\n// \t\t\t\t<LastName.Provider value={\"Sharma\"}>\r\n// \t\t\t\t\t<CompA />\r\n// \t\t\t\t</LastName.Provider>\r\n// \t\t\t</FirstName.Provider>\r\n// \t\t</>\r\n// \t);\r\n// }\r\n\r\n// export default App;\r\n// export {FirstName, LastName};\r\n\r\n//////// UseEffect\r\n\r\n// import React, { useEffect, useState } from 'react'\r\n\r\n// const App = () => {\r\n\r\n// \tconst [num, setNum] = useState(0)\r\n// \tconst [nums, setNums] = useState(0)\r\n\r\n// \tuseEffect( () => {\r\n// \t\talert(\"I am clicked\");\r\n// \t\tconsole.log(\"I am clickcd\");\r\n// \t}, [num])\r\n\r\n// \treturn (\r\n// \t\t<>\r\n// \t\t\t<button onClick={ () => {setNum(num+1)}}>Click Me {num}</button>\r\n// \t\t\t<br/>\r\n// \t\t\t<br/>\r\n// \t\t\t<br/>\r\n// \t\t\t<button onClick={ () => {setNums(nums+1)}}>Click Mes {nums}</button>\r\n// \t\t</>\r\n// \t)\r\n// }\r\n\r\n// export default App;\r\n\r\n//// UseEffects practice\r\n\r\n// import React, { useEffect, useState } from 'react'\r\n\r\n// const App = () => {\r\n\r\n// \tconst [num, setNum] = useState(0);\r\n\r\n// \tuseEffect(() => {\r\n// \t\tdocument.title=`You Clicked Me ${num} Times`;\r\n// \t})\r\n\r\n// \treturn (\r\n// \t\t<>\r\n// \t\t\t<button onClick={()=>{\r\n// \t\t\t\tsetNum(num+1)\r\n// \t\t\t}}>Click Me {num} </button>\r\n// \t\t</>\r\n// \t)\r\n// }\r\n\r\n// export default App;\r\n\r\n/////// React Router\r\n\r\nimport React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport About from \"./About\";\r\nimport Contact from \"./Contact\";\r\nimport Error from \"./Error\";\r\nimport Navbar from \"./Navbar\";\r\nimport User from './User';\r\n\r\n\r\n\r\nconst App = () => {\r\n  const Name = () => {\r\n    return <h1>Hello, I am Name Page</h1>;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          component={() => {\r\n            return <About name=\"About\" />;\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/contact\"\r\n          render={() => {\r\n            return <Contact name=\"Contact\" />;\r\n          }}\r\n        />\r\n        <Route exact path=\"/contact/Name\" component={Name} />\r\n        <Route  path=\"/user/:fname\" component={User} />\r\n        <Route component={Error} />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}